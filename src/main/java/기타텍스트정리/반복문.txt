[ JAVA ]
    (1) for( 초기값 ; 조건문 ; 증감식 ){ }
    (2) for( 타입 반복변수 : 리스트/배열 ) { }
    (3) 리스트.stream().forEach( (반복변수) -> { } );
    (4) 리스트.stream()
        .map( (반복변수) -> { } )
        .collect( Collectors.to켈렉션명() );
    (5) 리스트명.stream()
        .filter( ( 반복변수 )-> {} )
        .collect( Collectors.to켈렉션명() );

    * forEach 함수는 반환을 제공하지 않는다.
    * map 에서 구현코드가 한줄이면 return 생략









[ JS ]
    (1) for( 초기값 ; 조건문 ; 증감식 ){ }
    (2) for( 타입 반복변수 in 리스트/배열 ) { }
    (2) for( 타입 반복변수 of 리스트/배열 ) { }
    (3) 리스트.forEach( (반복변수) => {} );
    (4) 리스트.map( (반복변수) => {} );
    (5) 리스트.filter( (반복변수) => {} );

    * forEach 함수는 반환을 제공하지 않는다.
    * map 에서 구현코드가 한줄이면 return 생략
        -> map 형식은 리액트 jsx 에서 많이 사용된다.




















